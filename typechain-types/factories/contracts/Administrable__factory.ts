/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Administrable,
  AdministrableInterface,
} from "../../contracts/Administrable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "initialAdmins",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addedBy",
        type: "address",
      },
    ],
    name: "AdminAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "removedBy",
        type: "address",
      },
    ],
    name: "AdminRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAdmin",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdminCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferAdminOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014d8380380620014d8833981810160405281019062000037919062000624565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000686565b60405180910390fd5b620000be816200037260201b60201c565b50600081511162000106576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000fd9062000704565b60405180910390fd5b60005b81518110156200036a57600073ffffffffffffffffffffffffffffffffffffffff1682828151811062000141576200014062000726565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603620001a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200019990620007a5565b60405180910390fd5b60016000838381518110620001bc57620001bb62000726565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156200024f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002469062000817565b60405180910390fd5b60018060008484815181106200026a576200026962000726565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060026000815480929190620002d89062000872565b91905055503373ffffffffffffffffffffffffffffffffffffffff168282815181106200030a576200030962000726565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff167fbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b60405160405180910390a38080620003619062000872565b91505062000109565b5050620008bf565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200049a826200044f565b810181811067ffffffffffffffff82111715620004bc57620004bb62000460565b5b80604052505050565b6000620004d162000436565b9050620004df82826200048f565b919050565b600067ffffffffffffffff82111562000502576200050162000460565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005458262000518565b9050919050565b620005578162000538565b81146200056357600080fd5b50565b60008151905062000577816200054c565b92915050565b6000620005946200058e84620004e4565b620004c5565b90508083825260208201905060208402830185811115620005ba57620005b962000513565b5b835b81811015620005e75780620005d2888262000566565b845260208401935050602081019050620005bc565b5050509392505050565b600082601f8301126200060957620006086200044a565b5b81516200061b8482602086016200057d565b91505092915050565b6000602082840312156200063d576200063c62000440565b5b600082015167ffffffffffffffff8111156200065e576200065d62000445565b5b6200066c84828501620005f1565b91505092915050565b620006808162000538565b82525050565b60006020820190506200069d600083018462000675565b92915050565b600082825260208201905092915050565b7f4174206c65617374206f6e652061646d696e2072657175697265640000000000600082015250565b6000620006ec601b83620006a3565b9150620006f982620006b4565b602082019050919050565b600060208201905081810360008301526200071f81620006dd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e76616c69642061646d696e20616464726573730000000000000000000000600082015250565b60006200078d601583620006a3565b91506200079a8262000755565b602082019050919050565b60006020820190508181036000830152620007c0816200077e565b9050919050565b7f4475706c69636174652061646d696e0000000000000000000000000000000000600082015250565b6000620007ff600f83620006a3565b91506200080c82620007c7565b602082019050919050565b600060208201905081810360008301526200083281620007f0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006200087f8262000868565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620008b457620008b362000839565b5b600182019050919050565b610c0980620008cf6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a6146101115780638b7bf3eb1461011b5780638da5cb5b14610139578063f2fde38b1461015757610088565b806308a80ff51461008d5780631785f53c146100a957806324d7806c146100c557806370480275146100f5575b600080fd5b6100a760048036038101906100a29190610845565b610173565b005b6100c360048036038101906100be9190610845565b6101f6565b005b6100df60048036038101906100da9190610845565b61039c565b6040516100ec919061088d565b60405180910390f35b61010f600480360381019061010a9190610845565b6103f2565b005b6101196105c2565b005b6101236105d6565b60405161013091906108c1565b60405180910390f35b6101416105e0565b60405161014e91906108eb565b60405180910390f35b610171600480360381019061016c9190610845565b610609565b005b61017b61068f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e190610963565b60405180910390fd5b6101f381610609565b50565b6101fe61068f565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661028a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610281906109cf565b60405180910390fd5b6001600254116102cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c690610a3b565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506002600081548092919061033a90610a8a565b91905055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fdb9d5d31320daf5bc7181d565b6da4d12e30f0f4d5aa324a992426c14a1d19ce60405160405180910390a350565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6103fa61068f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046090610aff565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90610b6b565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506002600081548092919061056090610b8b565b91905055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b60405160405180910390a350565b6105ca61068f565b6105d46000610716565b565b6000600254905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61061161068f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106835760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161067a91906108eb565b60405180910390fd5b61068c81610716565b50565b6106976107da565b73ffffffffffffffffffffffffffffffffffffffff166106b56105e0565b73ffffffffffffffffffffffffffffffffffffffff1614610714576106d86107da565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161070b91906108eb565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610812826107e7565b9050919050565b61082281610807565b811461082d57600080fd5b50565b60008135905061083f81610819565b92915050565b60006020828403121561085b5761085a6107e2565b5b600061086984828501610830565b91505092915050565b60008115159050919050565b61088781610872565b82525050565b60006020820190506108a2600083018461087e565b92915050565b6000819050919050565b6108bb816108a8565b82525050565b60006020820190506108d660008301846108b2565b92915050565b6108e581610807565b82525050565b600060208201905061090060008301846108dc565b92915050565b600082825260208201905092915050565b7f496e76616c6964206e6577206f776e6572000000000000000000000000000000600082015250565b600061094d601183610906565b915061095882610917565b602082019050919050565b6000602082019050818103600083015261097c81610940565b9050919050565b7f4e6f7420616e2061646d696e0000000000000000000000000000000000000000600082015250565b60006109b9600c83610906565b91506109c482610983565b602082019050919050565b600060208201905081810360008301526109e8816109ac565b9050919050565b7f43616e6e6f742072656d6f7665206c6173742061646d696e0000000000000000600082015250565b6000610a25601883610906565b9150610a30826109ef565b602082019050919050565b60006020820190508181036000830152610a5481610a18565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a95826108a8565b915060008203610aa857610aa7610a5b565b5b600182039050919050565b7f496e76616c69642061646d696e20616464726573730000000000000000000000600082015250565b6000610ae9601583610906565b9150610af482610ab3565b602082019050919050565b60006020820190508181036000830152610b1881610adc565b9050919050565b7f416c726561647920616e2061646d696e00000000000000000000000000000000600082015250565b6000610b55601083610906565b9150610b6082610b1f565b602082019050919050565b60006020820190508181036000830152610b8481610b48565b9050919050565b6000610b96826108a8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610bc857610bc7610a5b565b5b60018201905091905056fea2646970667358221220ac9188977ae05727c9061390e5c899abcd2609b9cfa56d8c1ff32ed5d504993064736f6c63430008140033";

type AdministrableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdministrableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Administrable__factory extends ContractFactory {
  constructor(...args: AdministrableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialAdmins: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialAdmins, overrides || {});
  }
  override deploy(
    initialAdmins: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialAdmins, overrides || {}) as Promise<
      Administrable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Administrable__factory {
    return super.connect(runner) as Administrable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdministrableInterface {
    return new Interface(_abi) as AdministrableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Administrable {
    return new Contract(address, _abi, runner) as unknown as Administrable;
  }
}
